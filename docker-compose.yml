version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres:12
    ports:
      - '5432:5432'
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: newPassword
      POSTGRES_DB: my-db-name
    networks:
      - awesome

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '9081:80'
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - awesome

  api:
    build:
      context: ./api
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    environment:
      PGHOST: postgres
      PGDATABASE: my-db-name
      PGUSER: postgres
      PGPASSWORD: newPassword
    networks:
      - awesome

  # app:
  #   build:
  #     context: .
  #   environment:
  #     DATABASE_URL: postgres://postgres:newPassword@postgres:5432/my-db-name
  #     NODE_ENV: development
  #     PORT: 3000
  #   ports:
  #     - '3000:3000'
  #   depends_on:
  #     - postgres
  #   restart: always
  #   networks:
  #     - awesome

networks:
  awesome:
    driver: bridge
